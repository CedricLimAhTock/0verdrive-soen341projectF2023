name: Node.js CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-{{ hashFiles('**/package-lock.json') }}

      - name: Change to Client Directory
        run: cd client

      - name: Install Client Dependencies
        run: npm install
        working-directory: ./client

      - name: Build Client
        run: npm run build
        working-directory: ./client

      - name: Test Client
        run: npm test
        working-directory: ./client

  build-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-{{ hashFiles('**/package-lock.json') }}

      - name: Change to Server Directory
        run: cd server

      - name: Install Server Dependencies
        run: npm install
        working-directory: ./server

      - name: Build Server
        run: npm run build
        working-directory: ./server

      - name: Test Server
        run: npm test
        working-directory: ./server

  build-db:
    runs-on: ubuntu-latest
    needs: [build-client, build-server]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MySQL
        uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: "8.0"

      - name: Check MySQL version
        run: |
          mysql -uroot -e 'SELECT version()' | grep -o '[0-9]+\.[0-9]+\.[0-9]+'
          mysql -u root -p < ./database/lorem.sql

  populate-db:
    runs-on: ubuntu-latest
    needs: [build-client, build-server, build-db]
    strategy:
      matrix:
        python-version: ["3.8.0", "3.9.0", "3.10.0", "3.11.0", "3.12.0"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test DB
        run: python ./database/populate_tables.py
